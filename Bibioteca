#include <iostream>
#include <string.h>

using namespace std;

void menu();
void login();
void Cadastro();
void funcionario();
void esqueceuasenha();
void loginfuncionario();
void telaprincipal();
void trabalho();
void adicionarlivro();
void inativarlivro();
void listarlivros();
void buscar();



int main()
{
    menu();


    return 0;
}

void menu()
{
    char opcao = ' ';

    while(opcao != 's')
    {
        printf("                                    |============================================|\n");
        printf("                                    |           Biblioteca Virtual               |\n");
        printf("                                    |============================================|\n");
        printf("                                    |          1 - Login                         |\n");
        printf("                                    |          2 - Cadastro                      |\n");
        printf("                                    |          3 - Esqueceu a senha              |\n");
        printf("                                    |          4 - Area do Colaborador           |\n");
        printf("                                    |--------------------------------------------|\n");
        printf("                                    |      Digite uma opcao ou \"s\" para sair     |\n");
        printf("                                    |--------------------------------------------|\n");
        scanf(" %c", &opcao);

        switch(opcao)
        {
            case '1':
            {
                login();
                break;
            }
            case '2':
            {
                Cadastro();
                break;
            }
            case '3':
            {
                esqueceuasenha();
                break;
            }
            case '4':
                {
                    funcionario();
                    break;
                }
        }
        system("cls");
    }
}

void login()
{
    char usuario[30];
    char senha[15];

    system("cls");

    printf("\n                                              Biblioteca Virtual                                                                                         \n");
    printf("========================================================================================================================\n");
    printf("\n                                                    LOGIN\n");
    fflush(stdin);
    printf("\nUsuario:");
    fgets(usuario, 30, stdin);
    printf("Senha: ");
    scanf("%s", senha);

    telaprincipal();
}
void Cadastro()
{
    char nome[50];
    char usuario[30];
    char email[50];
    char senha[15];
    char confirmar[15];
    char opcao = ' ';

    while(opcao != '0')
    {

    system("cls");

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\n                                                      CADASTRO\n");

    fflush(stdin);
    printf("Nome:\n");
    fgets(nome, 50, stdin);
    printf("Usuario:\n");
    fgets(usuario, 30, stdin);
    printf("Email:\n");
    fgets(email, 50, stdin);
    do {
            printf("Senha:\n");
            fgets(senha, 15, stdin);
            printf("Confirme a senha:\n");
            fgets(confirmar, 15, stdin);

            if (strcmp(senha, confirmar) != 0) {
                printf("Erro: As senhas nao coincidem. Tente novamente.\n");
            }
        } while (strcmp(senha, confirmar) != 0);

        printf("Cadastro realizado com sucesso!\n");
        opcao = '0'; // Saí do loop após cadastro bem-sucedido
    }
}

void esqueceuasenha()
{
    char email[50];
    char opcao = ' ';

    system("cls");
    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\n                                                  ESQUECEU A SENHA?\n");
    printf("\nDigite seu Email para recuperacao:\n");
    scanf("%s", email);

    while(opcao != '0')
    {
    system("cls");
    printf("\n                         Um Email foi enviado para recuperacao, verifique seu Email!\n");
    printf("------------------------------------------------------------------------------------------------------------------------\n");
    printf("\n                                          Digite \"0\" para voltar \n");
    scanf("%c", &opcao);
    }
}

void funcionario()
{

    system("cls");
    char opcao = ' ';

    while(opcao != 's')
    {
        printf("                                    |============================================|\n");
        printf("                                    |           Biblioteca Virtual               |\n");
        printf("                                    |============================================|\n");
        printf("                                    |          1 - Login                         |\n");
        printf("                                    |          2 - Esqueceu a senha              |\n");
        printf("                                    |--------------------------------------------|\n");
        printf("                                    |      Digite uma opcao ou \"s\" para sair     |\n");
        printf("                                    |--------------------------------------------|\n");
        scanf(" %c", &opcao);

        switch(opcao)
        {
            case '1':
            {
                loginfuncionario();
                break;
            }
            case '2':
            {
                esqueceuasenha();
                break;
            }
        }
        system("cls");
    }
}
void loginfuncionario()
{
    char usuario[30];
    char senha[15];

    system("cls");

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\n                                                       LOGIN\n");
    fflush(stdin);
    printf("\nUsuario:");
    fgets(usuario, 30, stdin);
    printf("Senha:");
    scanf("%s", senha);

    trabalho();

}

void telaprincipal()
{
    void buscar();
    void filtros();
    void lista();

    system("cls");

    char opcao = ' ';
    while(opcao != 's')
    {

    printf("                                       |=============================================|\n");
    printf("                                       |            Biblioteca Virtual               |\n");
    printf("                                       |=============================================|\n");
    printf("                                       | 1- [Buscar Livro: __________] [Buscar]      |\n");
    printf("                                       |---------------------------------------------|\n");
    printf("                                       | 2- Filtros:                                 |\n");
    printf("                                       | [Eng. Software] [Programacao] [Redes]       |\n");
    printf("                                       | [Ciencia Comp.] [Matematica] [Fisica]...    |\n");
    printf("                                       |---------------------------------------------|\n");
    printf("                                       | 3- Lista de Livros:                         |\n");
    printf("                                       |---------------------------------------------|\n");
    printf("                                       | Digite uma opcao ou \"s\" para sair           |\n");
    printf("                                       |---------------------------------------------|\n");
    scanf(" %c", &opcao);


     switch(opcao)
        {
            case '1':
            {
                buscar();
                break;
            }
            case '2':
            {
                filtros();
                break;
            }
            case '3':
            {
                lista();
                break;
            }
        }
        system("cls");
    }
}
#define MAX_LIVROS 100
#define TITULO_MAX 100
#define AUTOR_MAX 100

typedef struct
{
    char titulo[TITULO_MAX];
    char autor[AUTOR_MAX];
} Livro;

Livro biblioteca[MAX_LIVROS];
int contadorLivros = 0;

void buscar()
{
    system("cls");

    char opcao = ' ';
    while(opcao != '0')
    {
        char tituloBusca[TITULO_MAX];
        printf("\n                                                 Biblioteca Virtual                                                    \n");
        printf("========================================================================================================================\n");
        fflush(stdin);

        printf("\nDigite o titulo do livro que deseja buscar: ");
        fgets(tituloBusca, TITULO_MAX, stdin);
        tituloBusca[strcspn(tituloBusca, "\n")] = '\0';

        int encontrado = 0;

        for (int i = 0; i < contadorLivros; i++)
        {
            if (strcmp(biblioteca[i].titulo, tituloBusca) == 0)
            {
                printf("Livro encontrado:\n");
                printf("Titulo: %s\n", biblioteca[i].titulo);
                printf("Autor: %s\n", biblioteca[i].autor);
                encontrado = 1;
                break;
            }
        }

        if (!encontrado)
        {
            printf("Livro nao encontrado: %s\n", tituloBusca);
        }

        printf("\n                                               Digite \"0\" para voltar \n");
        scanf(" %c", &opcao);
        getchar();
    }
}


void filtros()
{
    char opcao = ' ';
    while(opcao != '0')
    {

    system("cls");

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\n                                                      Filtros:    \n");
    printf("         |----------------------------------------------------------------------------------------------------|\n\n");
    printf("         | Ciencia Exatas: [Matematica] [Fisica] [Quimica] [Engenharia]                                       |\n\n");
    printf("         | Ciencia Biologicas: [Biologia] [Medicina] [Farmacia] [Ciencia Ambientais]                          |\n\n");
    printf("         | Ciencia Sociais: [Sociologia] [Antropologia] [Psicologia] [Economia]                               |\n\n");
    printf("         | Humanas: [Historia] [Filosofia] [Literatura] [Linguistica]                                         |\n\n");
    printf("         | Tecnologia e Informatica: [Ciencia da Computacao] [Engenharia de Software] [Redes de Computadores] |\n\n");
    printf("         | Direito: [Direito Civil] [Direito Penal] [Direito Administrativo]                                  |\n\n");
    printf("         | Administracao: [Gestao de Negocios] [Marketing] [Recursos Humanos]                                 |\n\n");
    printf("         | Artes e Design: [Artes Visuais] [Design Grafico] [Arquitetura]                                     |\n\n");
    printf("         |----------------------------------------------------------------------------------------------------|\n\n");
    printf("\n                                         Digite uma opcao ou \"0\" para voltar \n");
    scanf("%c", &opcao);
    }
}

void lista()
{
  listarlivros();
}

void trabalho()
{
    void gerenciamentolivros();
    void gerenciamentousuario();
    void emprestimosedevolucoes();

    system("cls");
    char opcao = ' ';

    while(opcao != 's')
    {
        printf("                                    |============================================|\n");
        printf("                                    |           Biblioteca Virtual               |\n");
        printf("                                    |============================================|\n");
        printf("                                    |        1 - Gerenciamento de livros         |\n");
        printf("                                    |        2 - Gerenciamento de Usuarios       |\n");
        printf("                                    |        3 - Emprestimos e Devolucoes        |\n");
        printf("                                    |--------------------------------------------|\n");
        printf("                                    |      Digite uma opcao ou \"s\" para sair     |\n");
        printf("                                    |--------------------------------------------|\n");
        scanf(" %c", &opcao);

        switch(opcao)
        {
            case '1':
            {
                gerenciamentolivros();
                break;
            }
            case '2':
            {
                gerenciamentousuario();
                break;
            }
            case '3':
            {
                emprestimosedevolucoes();
                break;
            }


        }
        system("cls");
    }
}

void gerenciamentolivros()
  {
      void adicionarlivro();
      void removerlivro();
      void listarlivros();

      system("cls");
      char opcao = ' ';

      while(opcao != 's')
    {
        printf("                                    |============================================|\n");
        printf("                                    |           Biblioteca Virtual               |\n");
        printf("                                    |============================================|\n");
        printf("                                    |          1 - Adicionar Livro               |\n");
        printf("                                    |          2 - Inativar Livro                |\n");
        printf("                                    |          3 - Lista de Livros               |\n");
        printf("                                    |--------------------------------------------|\n");
        printf("                                    |      Digite uma opcao ou \"s\" para sair     |\n");
        printf("                                    |--------------------------------------------|\n");
        scanf(" %c", &opcao);

        switch(opcao)
        {
            case '1':
            {
                adicionarlivro();
                break;
            }
            case '2':
            {
                inativarlivro();
                break;
            }
            case '3':
            {
                listarlivros();
                break;
            }
        }
        system("cls");
    }

  }


void adicionarlivro()
{
    system("cls");
    char opcao = ' ';
    while(opcao != '0')
    {
    char titulo[TITULO_MAX];
    char autor[AUTOR_MAX];

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    fflush(stdin);
    printf("\nDigite o titulo do livro: ");
    fgets(titulo, TITULO_MAX, stdin);
    titulo[strcspn(titulo, "\n")] = '\0';

    fflush(stdin);
    printf("Digite o autor do livro: ");
    fgets(autor, AUTOR_MAX, stdin);
    autor[strcspn(autor, "\n")] = '\0';

    if (contadorLivros < MAX_LIVROS)
        {
        strncpy(biblioteca[contadorLivros].titulo, titulo, TITULO_MAX);
        strncpy(biblioteca[contadorLivros].autor, autor, AUTOR_MAX);
        contadorLivros++;
        printf("Livro adicionado: %s, autor: %s\n", titulo, autor);
        }
    else
        {
        printf("Nao e possível adicionar mais livros, a biblioteca esta cheia!\n");
        }

    printf("\n                                               Digite \"0\" para voltar \n");
    scanf("%c", &opcao);
    getchar();
    }
}

//Inativar Livro
void inativarlivro()
{
    char titulo[TITULO_MAX];
    system("cls");
    char opcao = ' ';
    while(opcao != '0')
    {
    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    fflush(stdin);
    printf("\nDigite o titulo do livro a ser inativado: ");
    fgets(titulo, TITULO_MAX, stdin);
    titulo[strcspn(titulo, "\n")] = '\0';

    int encontrado = 0;

    for (int i = 0; i < contadorLivros; i++)
        {
        if (strcmp(biblioteca[i].titulo, titulo) == 0)
            {
            for (int j = i; j < contadorLivros - 1; j++)
                {
                biblioteca[j] = biblioteca[j + 1];
                }
            contadorLivros--;
            printf("Livro inativo: %s\n", titulo);
            encontrado = 1;
            break;
            }
        }

    if (!encontrado)
    {
    printf("Livro nao encontrado: %s\n", titulo);
    }

    printf("\n                                               Digite \"0\" para voltar \n");
    scanf(" %c", &opcao);
    getchar();
    }
}

void listarlivros()
{
    system("cls");
    char opcao = ' ';
    while(opcao != '0')
    {
    if (contadorLivros == 0)
        {
        printf("Nenhum livro na biblioteca.\n");
        return;
        }

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\nLista de Livros:\n");
    for (int i = 0; i < contadorLivros; i++)
        {
        printf("%d. %s, autor: %s\n", i + 1, biblioteca[i].titulo, biblioteca[i].autor);
        }
    printf("\n                                               Digite \"0\" para voltar \n");
    scanf("%s", &opcao);
    getchar();
    }
}

void gerenciamentousuario()
{
      void adicionarusuario();
      void removerusuario();
      void listadeusuario();

      system("cls");
      char opcao = ' ';

      while(opcao != 's')
    {
        printf("                                    |============================================|\n");
        printf("                                    |           Biblioteca Virtual               |\n");
        printf("                                    |============================================|\n");
        printf("                                    |          1 - Adicionar usuario             |\n");
        printf("                                    |          2 - lista de usuario              |\n");
        printf("                                    |--------------------------------------------|\n");
        printf("                                    |      Digite uma opcao ou \"s\" para sair     |\n");
        printf("                                    |--------------------------------------------|\n");
        scanf(" %c", &opcao);

        switch(opcao)
        {
            case '1':
            {
                adicionarusuario();
                break;
            }
            case '2':
            {
                listadeusuario();
                break;
            }
        }
        system("cls");
    }
}

#define MAX_USUARIOS 100
    typedef struct {
    int id = 0;
    char nome[50];
    char email[50];
} Usuario;

Usuario usuarios[MAX_USUARIOS];
int totalUsuarios = 0;


void adicionarusuario()
{
    char opcao = ' ';

    while(opcao != '0')
    {
    system("cls");

        if (totalUsuarios >= MAX_USUARIOS)
        {
        printf("Limite de usuarios atingido.\n");
        return;
        }

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    Usuario novoUsuario;
    printf("\nDigite o ID do usuario: ");
    scanf("%d", &novoUsuario.id);
    fflush(stdin);
    printf("Digite o nome do usuario: ");
    fgets(novoUsuario.nome, 50,stdin);
    novoUsuario.nome[strcspn(novoUsuario.nome, "\n")] = 0;
    fflush(stdin);
    printf("Digite o Email do usuario: ");
    fgets(novoUsuario.email, 50,stdin);
    novoUsuario.email[strcspn(novoUsuario.email, "\n")] = 0;


    // Adiciona o novo usuario a lista
    usuarios[totalUsuarios++] = novoUsuario;
    printf("\nUsuario adicionado com sucesso!\n");


    printf("\n\n                                               Digite \"0\" para voltar \n");
    scanf(" %c", &opcao);

    }
}

void listadeusuario()
{
    char opcao = ' ';

    while(opcao != '0')
    {
    system("cls");

      if (totalUsuarios == 0)
        {
        printf("Nenhum usuario cadastrado.\n");
        return;
        }

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("Lista de Usuarios:\n\n");
    for (int i = 0; i < totalUsuarios; i++)
        {
        printf("ID: %d, Nome: %s, Email: %s\n", usuarios[i].id, usuarios[i].nome, usuarios[i].email);
        }

    printf("\n\n                                                Digite \"0\" para voltar \n");
    scanf(" %c", &opcao);
   }
}

void emprestimosedevolucoes()
{
      void emprestarlivro();
      void devolverlivro();
      void listadeemprestimos();

      system("cls");
      char opcao = ' ';

      while(opcao != 's')
    {
        printf("                                    |============================================|\n");
        printf("                                    |           Biblioteca Virtual               |\n");
        printf("                                    |============================================|\n");
        printf("                                    |          1 - Emprestar Livro               |\n");
        printf("                                    |          2 - Devolver Livro                |\n");
        printf("                                    |          3 - Lista de Emprestimos          |\n");
        printf("                                    |--------------------------------------------|\n");
        printf("                                    |      Digite uma opcao ou \"s\" para sair     |\n");
        printf("                                    |--------------------------------------------|\n");
        scanf(" %c", &opcao);

        switch(opcao)
        {
            case '1':
            {
                emprestarlivro();
                break;
            }
            case '2':
            {
                devolverlivro();
                break;
            }
            case '3':
            {
                listadeemprestimos();
                break;
            }

        }
        system("cls");
    }

}

#define MAX_EMPRESTIMOS 100

typedef struct {
    char titulo[TITULO_MAX];
    char usuario[50];
    int id;
    char dataEmprestimo[11]; // Formato: "dd/mm/aaaa"
} Emprestimo;

Emprestimo listaEmprestimos[MAX_EMPRESTIMOS];
int contadorEmprestimos = 0;

void emprestarlivro()
{
    system("cls");
    char opcao = ' ';
    while(opcao != '0')
    {

     if (contadorEmprestimos >= MAX_EMPRESTIMOS)
        {
        printf("Limite de emprestimos atingido.\n");
        return;
        }

    char titulo[TITULO_MAX];
    char usuario[50];
    int id;
    char data[11];

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\nEmprestar:\n");
    fflush(stdin);
    printf("\nDigite o titulo do livro: ");
    fgets(titulo, TITULO_MAX, stdin);
    titulo[strcspn(titulo, "\n")] = '\0';

    fflush(stdin);
    printf("Digite o nome do usuario: ");
    fgets(usuario, 50, stdin);
    usuario[strcspn(usuario, "\n")] = '\0';

    printf("Digite o ID do usuario: ");
    scanf("%d", &id);
    getchar();

    fflush(stdin);
    printf("Digite a data do emprestimo (dd/mm/aaaa): ");
    fgets(data, 11, stdin);
    data[strcspn(data, "\n")] = '\0';

    // Armazenar o emprestimo
    strcpy(listaEmprestimos[contadorEmprestimos].titulo, titulo);
    strcpy(listaEmprestimos[contadorEmprestimos].usuario, usuario);
    listaEmprestimos[contadorEmprestimos].id = id;
    strcpy(listaEmprestimos[contadorEmprestimos].dataEmprestimo, data);
    contadorEmprestimos++;

    printf("\nLivro emprestado com sucesso!\n");

    printf("\n\n                                                Digite \"0\" para voltar \n");
    scanf(" %c", &opcao);
   }

}

void devolverlivro()
{
    system("cls");
    char opcao = ' ';

    while (opcao != '0')
    {
        char titulo[TITULO_MAX];
        char usuario[50];
        int id;

        printf("\n                                                 Biblioteca Virtual                                                    \n");
        printf("========================================================================================================================\n");
        printf("\nDevolucao:\n");
        fflush(stdin);
        printf("\nDigite o titulo do livro a ser devolvido: ");
        fgets(titulo, TITULO_MAX, stdin);
        titulo[strcspn(titulo, "\n")] = '\0';

        fflush(stdin);
        printf("Digite o nome do usuario: ");
        fgets(usuario, sizeof(usuario), stdin);
        usuario[strcspn(usuario, "\n")] = '\0';

        printf("Digite o ID do usuario: ");
        scanf("%d", &id);


        int encontrado = 0;

        for (int i = 0; i < contadorEmprestimos; i++)
            {
            if (strcmp(listaEmprestimos[i].titulo, titulo) == 0 &&
                strcmp(listaEmprestimos[i].usuario, usuario) == 0 &&
                listaEmprestimos[i].id == id)
                {
                for (int j = i; j < contadorEmprestimos - 1; j++)
                    {
                    listaEmprestimos[j] = listaEmprestimos[j + 1];
                    }
                contadorEmprestimos--;
                encontrado = 1;
                printf("\nLivro devolvido com sucesso!\n");
                break;
                }
            }

        if (!encontrado)
            {
            printf("\nLivro nao encontrado na lista de emprestimos.\n");
            }

        fflush(stdin);
        printf("\n\n                                                Digite \"0\" para voltar \n");
        scanf(" %c", &opcao);
        getchar();
    }

}

void listadeemprestimos()
{
    system("cls");
    char opcao = ' ';
    while(opcao != '0')
    {

   if (contadorEmprestimos == 0)
        {
        printf("Nao ha emprestimos no momento.\n");
        return;
        }

    printf("\n                                                 Biblioteca Virtual                                                    \n");
    printf("========================================================================================================================\n");
    printf("\nLista de Emprestimos:\n");

    for (int i = 0; i < contadorEmprestimos; i++) {
        printf("\nLivro: %s, Usuario: %s, ID: %d, Data: %s\n",
               listaEmprestimos[i].titulo,
               listaEmprestimos[i].usuario,
               listaEmprestimos[i].id,
               listaEmprestimos[i].dataEmprestimo);
    }

    printf("\n\n                                                Digite \"0\" para voltar \n");
    scanf("%s", &opcao);
   }
}

